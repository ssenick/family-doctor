@use "sass:math";

// Подключение миксинов ===========================================================================================================================================================================================================================================================================
@import "base/mixins";

// Подключение шрифтов ===========================================================================================================================================================================================================================================================================
//&display=swap - добавить при подключении через плагин

// Подключить если есть локальные файлы шрифтов
@import "fonts/fonts";

// Подключение иконочных шрифтов ==============================================================================================================================================================================================================================================================================
// Подключить если есть файл иконочного шрифта
//@import "fonts/icons";

// Шрифт по умолчанию ==============================================================================================================================================================================================================================================================================
$fontFamily: "Gilroy";
$fontSize: rem(18); // где 14(px) - размер шрифта по умолчанию из макета

// Основные цвета
$mainColor: #474551; // Цвет шрифта по умолчанию

$sk: #046dbf;
$c1: #099dba;
$c2: #33d9da;
$c3: #bdf8f9;
$c4: #f3fefe;
$c5: #474551;

// НАСТРОЙКИ ===============================================================================================================================================================================================================================================================================================
// Минимальная ширина страницы
$minWidth: 320;
// Ширина полотна (макета)
$maxWidth: 1920;
// Ширина ограничивающего контейнера (0 = нет ограничения)
$maxWidthContainer: 1290;
// Общий отступ у контейнера
// (30 = по 15px слева и справа, 0 = нет отступа)
$containerPadding: 30;

// Ширина срабатывания первого брейкпоинта
$containerWidth: $maxWidthContainer + $containerPadding;

// Брейк-поинты
$pc: em($containerWidth); // ПК, ноутбуки, некоторые планшеты в горизонтальном положении
$tablet: em(1024.98); // Планшеты, некоторые телефоны в горизонтальном положении
$mobile: em(767.98); // Телефоны L
$mobileSmall: em(479.98); // Телефоны S

// Тип адаптива:
// 1 = отзывчивость (у контейнера нет брейкпоинтов),
// 2 = по брейк-поинтам (контейнер меняет свою ширину по брейк-поинтам)
$responsiveType: 1;

// Обнуление и общие параметры ============================================================================================================================================================================================== =============================================================================================== ===============================================================================================
@import "base/null";

body {
	// Скролл заблокирован
	.lock & {
		overflow: hidden;
		touch-action: none;
	}
	// Сайт загружен
	.loaded & {
	}
}
#preloader {
	background: $c4;
	height: 100vh;
	width: 100%;
	position: fixed;
	left: 0;
	top: 0;
	z-index: 100;
	overflow: hidden;
	transition: all 0.3s ease 0s;
	opacity: 1;
	visibility: visible;
	.loaded & {
		opacity: 0;
		visibility: hidden;
	}
	#loader {
		width: 75px;
		height: 75px;
		border: 10px solid rgb(247, 222, 57);
		border-radius: 50%;
		border-top-color: $c1;
		left: 50%;
		top: 50%;
		position: absolute;
		transform: translate(-50%, -50%);
		animation: spin 1s infinite linear;
	}
	#loaderPrecent {
		position: absolute;
		top: 50%;
		left: 50%;
		transform: translate(-50%, -50%);
		color: $sk;
		font-weight: 700;
	}
}
@keyframes spin {
	0% {
		transform: translate(-50%, -50%) rotate(0deg);
	}
	100% {
		transform: translate(-50%, -50%) rotate(360deg);
	}
}

// Оболочка ============================================================================================================================================================================================================================================================================================================================================================================================================================================
.wrapper {
	min-height: 100%;
	display: flex;
	flex-direction: column;
	overflow: hidden;
	//max-width: 3000px;
	//margin: 0px auto;
	//box-shadow: 0px 0px 500px 2000px rgba(204, 242, 243, 0.7);
	// Прижимаем footer
	> main {
		flex: 1 1 auto;
	}
	// Фикс для слайдеров
	> * {
		min-width: 0;
	}
}
.page {
	padding: 194px 0px 0px 0px;
	display: grid;
	@include adaptiveValue("row-gap", 90, 60);
	@media (max-width: $pc) {
		@include adaptiveValue("padding-top", 154, 114, 1320, 1024, 1);
	}
	@media (max-width: $tablet) {
		padding: 114px 0px 0px 0px;
	}
	@media (max-width: $mobile) {
		padding: 94px 0px 0px 0px;
	}
	@media (max-width: $mobileSmall) {
		padding: 133px 0px 0px 0px;
	}
}
// Ограничивающий контейнер ======================================================================================================================================================================================================================

/*
(i) Стили будут применяться ко 
всем классам содержащим *__container
Например header__container, main__container и т.д.
Снипет (HTML): cnt
*/
@if ($responsiveType==1) {
	// Отзывчивая
	[class*="__container"] {
		@if ($maxWidthContainer>0) {
			max-width: rem($maxWidthContainer);
			box-sizing: content-box;
			margin: 0 auto;
		}
		@if ($containerPadding>0) {
			padding: 0 rem(math.div($containerPadding, 2));
		}
	}
} @else {
	// По брейк-поинтам
	[class*="__container"] {
		margin: 0 auto;
		@if ($maxWidthContainer>0) {
			max-width: rem($maxWidthContainer);
			box-sizing: content-box;
		} @else {
			@if ($containerPadding>0) {
				padding: 0 rem(math.div($containerPadding, 2));
			}
		}
		@media (max-width: $pc) {
			max-width: rem(970);
		}
		@media (max-width: $tablet) {
			max-width: rem(750);
		}
		@media (max-width: $mobile) {
			max-width: none;
			@if ($containerPadding>0 and $maxWidthContainer>0) {
				padding: 0 rem(math.div($containerPadding, 2));
			}
		}
	}
}

// Подключение базовых стилей, шаблонов (заготовок) и вспомогательных  классов
// Для подключения/отключения конкретных стилей смотри base.scss
@import "base";

// Подключение стилей общих элементов проекта
@import "common";
@import "first-page";
@import "consultation";
@import "promotions";
@import "services";
@import "doctors";
@import "categories";
@import "reviews";
@import "license";
@import "about";
@import "sign-up";
@import "contacts";

// Подключение стилей отдельных блоков
@import "header";
@import "footer";

// Подключение стилей отдельных страниц
@import "home";

//=================================
//=================================

h1 {
	font-weight: 700;
	@include adaptiveValue("font-size", 58, 20);
	line-height: 120%;
}
h2 {
	font-weight: 500;
	@include adaptiveValue("font-size", 42, 20);
	line-height: 120%;
	@media (max-width: $mobile) {
		font-weight: 600;
	}
}
h3 {
	font-weight: 600;
	@include adaptiveValue("font-size", 28, 16);
	line-height: 140%;
}

.text-122 {
	font-size: 18px;
	line-height: math.div(22px, 18px) * 100%;
}
.text-140 {
	font-size: 18px;
	line-height: 140%;
	@media (max-width: $pc) {
		font-size: 16px;
	}
}

//=================================
//=================================
